import { useEffect, useState } from "react";
import ResumeLoadingAnimation from "../components/ResumeLoadingAnimation";

export default function TailoredSuggestionsStep({ resumeFile, jobDescription }) {
  const [data, setData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState("");

  useEffect(() => {
    if (!resumeFile || !jobDescription) return;

    // Save for animation component (to trigger backend internally)
    window.__resumeFile = resumeFile;
    window.__jobDescription = jobDescription;

    setLoading(true);
    setError("");
    setData(null);
  }, [resumeFile, jobDescription]);

  // 🧠 When backend result arrives
  const handleResult = (result) => {
    console.log("🎯 Backend result received:", result);
    if (result.error) {
      setError(result.error);
    } else {
      setData(result);
    }
    setLoading(false);
  };

  // 🌀 While analyzing
  if (loading) {
    return <ResumeLoadingAnimation onResult={handleResult} />;
  }

  // ⚠️ If error occurred
  if (error) {
    return (
      <div className="text-red-400 bg-gray-800 border border-red-500 rounded-lg p-4 mt-6 text-center">
        ❌ {error}
      </div>
    );
  }

  // ✅ When data is ready
  if (data) {
    return (
      <div className="text-white w-full">
        <h3 className="text-xl font-semibold mb-4 text-blue-400">
          🎯 Tailored Suggestions
        </h3>

        <p className="text-gray-300 mb-4">
          Based on your resume and job description, here are your personalized insights:
        </p>

        <div className="bg-gray-900 border border-gray-700 rounded-lg p-6 space-y-4 shadow-lg">
          {/* Compatibility Score */}
          <p>
            • <span className="text-blue-400 font-medium">Compatibility Score:</span>{" "}
            {data.matchScore ? `${data.matchScore}%` : "N/A"}
          </p>

          {/* Strengths */}
          {data.strengths && (
            <p>
              • <span className="text-blue-400 font-medium">Strengths:</span>{" "}
              {Array.isArray(data.strengths)
                ? data.strengths.join(", ")
                : data.strengths}
            </p>
          )}

          {/* Gaps / Missing Keywords */}
          {data.gaps && (
            <p>
              • <span className="text-blue-400 font-medium">Gaps:</span>{" "}
              {Array.isArray(data.gaps)
                ? data.gaps.join(", ")
                : data.gaps}
            </p>
          )}

          {/* Recommendations */}
          {data.recommendations && (
            <p>
              • <span className="text-blue-400 font-medium">AI Recommendations:</span>{" "}
              {Array.isArray(data.recommendations)
                ? data.recommendations.join(" ")
                : data.recommendations || data.message || "No specific suggestions."}
            </p>
          )}

          {/* Message fallback */}
          {data.message && !data.recommendations && (
            <p>
              • <span className="text-blue-400 font-medium">Summary:</span>{" "}
              {data.message}
            </p>
          )}
        </div>

        <div className="mt-6 text-gray-400 text-sm italic text-center">
          (Generated by AI — powered by Gemini)
        </div>
      </div>
    );
  }

  // 💤 Default fallback (nothing yet)
  return (
    <div className="text-gray-400 text-sm italic mt-6 text-center">
      Upload your resume and enter a job description to generate AI suggestions.
    </div>
  );
}
